x-default: &node
  image: ${CCAO_REGISTRY_URL}/service-spark-iasworld:latest
  # Corresponds to the user set in the Dockerfile and the shiny-server
  # user on the server for proper write perms to mounted directories
  user: 1003:0
  build:
    context: .
    dockerfile: Dockerfile
  restart: unless-stopped
  volumes:
    - ./drivers:/jdbc:ro
    - ./src:/tmp/src:ro
    - ./config:/tmp/config:ro
    - ./config/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf:ro
    - ./target:/tmp/target:rw
    - ./logs:/tmp/logs:rw
  secrets:
    - AWS_CREDENTIALS
    - GH_PEM
    - IPTS_PRD_PASSWORD
    - IPTS_TST_PASSWORD
  networks:
    - sparknet

services:
  spark-node-master-prod:
    <<: *node
    container_name: spark-node-master-prod
    hostname: spark-node-master-prod
    environment:
      - SPARK_MODE=master

      - AWS_SHARED_CREDENTIALS_FILE=/run/secrets/AWS_CREDENTIALS
      - AWS_S3_BUCKET
      - AWS_S3_PREFIX
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_PUBLIC_DNS=${SPARK_PUBLIC_IP}
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - IPTS_PRD_SERVICE_NAME
      - IPTS_PRD_HOSTNAME
      - IPTS_PRD_USERNAME
      - IPTS_PRD_PORT
      - IPTS_TST_SERVICE_NAME
      - IPTS_TST_HOSTNAME
      - IPTS_TST_USERNAME
      - IPTS_TST_PORT
      - GH_APP_ID
    ports:
      - 4040:4040
      - 8080:8080

  spark-node-master-dev:
    <<: *node
    container_name: spark-node-master-dev
    hostname: spark-node-master-dev
    environment:
      - SPARK_MODE=master

      - AWS_SHARED_CREDENTIALS_FILE=/run/secrets/AWS_CREDENTIALS
      - AWS_S3_BUCKET
      - AWS_S3_PREFIX
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_PUBLIC_DNS=${SPARK_PUBLIC_IP}
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - GH_APP_ID
    ports:
      - 4041:4041
      - 8081:8081

  spark-node-worker:
    <<: *node
    container_name: spark-node-worker
    hostname: spark-node-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-node-master:7077
      - SPARK_WORKER_MEMORY=96G
      - SPARK_WORKER_CORES=28
      - SPARK_WORKER_WEBUI_PORT=9090

      - AWS_SHARED_CREDENTIALS_FILE=/run/secrets/AWS_CREDENTIALS
      - AWS_S3_BUCKET
      - AWS_S3_PREFIX
      - SPARK_PUBLIC_DNS=${SPARK_PUBLIC_IP}
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
      - IPTS_PRD_SERVICE_NAME
      - IPTS_PRD_HOSTNAME
      - IPTS_PRD_USERNAME
      - IPTS_PRD_PORT
      - IPTS_TST_SERVICE_NAME
      - IPTS_TST_HOSTNAME
      - IPTS_TST_USERNAME
      - IPTS_TST_PORT
      - GH_APP_ID
    ports:
      - 9090:9090

# Using a dedicated subnet because the Docker default subnet conflicts
# with some of the CCAO's internal routing
networks:
  sparknet:
    ipam:
      config:
        - subnet: 211.55.0.0/16
    name: sparknet

secrets:
  AWS_CREDENTIALS:
    file: secrets/AWS_CREDENTIALS_FILE
  GH_PEM:
    file: secrets/GH_PEM
  IPTS_PRD_PASSWORD:
    file: secrets/IPTS_PRD_PASSWORD
  IPTS_TST_PASSWORD:
    file: secrets/IPTS_TST_PASSWORD
